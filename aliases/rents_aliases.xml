<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.001">
	<AliasPackage>
		<AliasGroup isActive="yes" isFolder="yes">
			<name>Rents</name>
			<script></script>
			<command></command>
			<packageName></packageName>
			<regex></regex>
			<Alias isActive="yes" isFolder="no">
				<name>Display all rents</name>
				<script>local rents_db = db:get_database("rents")

local storage = db:fetch(rents_db.storage)

if table.is_empty(storage) then
  rents:echo("No items found in the rent database.\n", false, true)
else
  cecho(string.format("%-10s&lt;ansi_cyan&gt;%-40s&lt;reset&gt;%s&lt;green&gt;%-40s&lt;gold&gt;%-10s\n", "Name", "Room", "", "Item", "Cost"))
  
  for _, item in pairs(storage) do
    local crowns = item.cost:match("(%d+) gold crowns")
    local coppers = item.cost:match("(%d+) coppers")
    if crowns then crowns = crowns.."g" else crowns = "0g" end
    if coppers then coppers = coppers.."c" else coppers = "0c" end
    local cost = crowns.." "..coppers
    
    local msg_format = "%-10s%-40s%s%-40s%-10s\n"
    if string.len(getRoomName(item.room)) &gt;= 40 or string.len(item.item) &gt;= 40 then
      msg_format = "%-10s%-40s\n%10s%-80s%-10s\n"
    end
  
    local msg = string.format(msg_format, 
      item.name,
      getRoomName(item.room),
      "", 
      item.item,
      cost
      )
    cechoLink(msg, function() centerview(item.room) end, "Click to center map on room.", true)
  end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^rents display$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Rents display name</name>
				<script>local name = matches[2]

local rents_db = db:get_database("rents")

local storage = db:fetch(rents_db.storage, db:like(rents_db.storage.name,name))

if table.is_empty(storage) then
  rents:echo("No items for the character \""..name.."\" found in the rent database.\n", false, true)
else
  cecho(string.format("%-10s&lt;ansi_cyan&gt;%-40s&lt;reset&gt;%s&lt;green&gt;%-40s&lt;gold&gt;%-10s\n", "Name", "Room", "", "Item", "Cost"))
  
  for _, item in pairs(storage) do
    local crowns = item.cost:match("(%d+) gold crowns")
    local coppers = item.cost:match("(%d+) coppers")
    if crowns then crowns = crowns.."g" else crowns = "0g" end
    if coppers then coppers = coppers.."c" else coppers = "0c" end
    local cost = crowns.." "..coppers
    
    local msg_format = "%-10s%-40s%s%-40s%-10s\n"
    if string.len(getRoomName(item.room)) &gt;= 40 or string.len(item.item) &gt;= 40 then
      msg_format = "%-10s%-40s\n%10s%-80s%-10s\n"
    end
  
    local msg = string.format(msg_format, 
      item.name,
      getRoomName(item.room),
      "", 
      item.item,
      cost
      )
    cechoLink(msg, function() centerview(item.room) end, "Click to center map on room.", true)
  end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^rents display name (.+)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Rents display item</name>
				<script>local name = matches[2]

local rents_db = db:get_database("rents")

local storage = {}

if name == "rare" then
  for _, rare in pairs(rents.rares) do
    storage = table.n_union(storage, db:fetch(rents_db.storage, db:like(rents_db.storage.item,"%"..rare.."%")))
  end
else
  storage = db:fetch(rents_db.storage, db:like(rents_db.storage.item,"%"..name.."%"))
end

if table.is_empty(storage) then
  rents:echo("No items containing the phrase \""..name.."\" found in the rent database\n", false, true)
else
  cecho(string.format("%-10s&lt;ansi_cyan&gt;%-40s&lt;reset&gt;%s&lt;green&gt;%-40s&lt;gold&gt;%-10s\n", "Name", "Room", "", "Item", "Cost"))
  
  for _, item in pairs(storage) do
    local crowns = item.cost:match("(%d+) gold crowns")
    local coppers = item.cost:match("(%d+) coppers")
    if crowns then crowns = crowns.."g" else crowns = "0g" end
    if coppers then coppers = coppers.."c" else coppers = "0c" end
    local cost = crowns.." "..coppers
    
    local msg_format = "%-10s%-40s%s%-40s%-10s\n"
    if string.len(getRoomName(item.room)) &gt;= 40 or string.len(item.item) &gt;= 40 then
      msg_format = "%-10s%-40s\n%10s%-80s%-10s\n"
    end
  
    local msg = string.format(msg_format, 
      item.name,
      getRoomName(item.room),
      "", 
      item.item,
      cost
      )
    cechoLink(msg, function() centerview(item.room) end, "Click to center map on room.", true)
  end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^rents display item (.+)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Rents display zone</name>
				<script>local name = matches[2]

local rents_db = db:get_database("rents")

local storage = db:fetch(rents_db.storage, db:like(rents_db.storage.zone, "%"..name.."%"))

if table.is_empty(storage) then
  rents:echo("No items for zone \""..name.."\" found in the rent database\n", false, true)
else
  cecho(string.format("%-10s&lt;ansi_cyan&gt;%-40s&lt;reset&gt;%s&lt;green&gt;%-40s&lt;gold&gt;%-10s\n", "Name", "Room", "", "Item", "Cost"))
  
  for _, item in pairs(storage) do
    local crowns = item.cost:match("(%d+) gold crowns")
    local coppers = item.cost:match("(%d+) coppers")
    if crowns then crowns = crowns.."g" else crowns = "0g" end
    if coppers then coppers = coppers.."c" else coppers = "0c" end
    local cost = crowns.." "..coppers
    
    local msg_format = "%-10s%-40s%s%-40s%-10s\n"
    if string.len(getRoomName(item.room)) &gt;= 40 or string.len(item.item) &gt;= 40 then
      msg_format = "%-10s%-40s\n%10s%-80s%-10s\n"
    end
  
    local msg = string.format(msg_format, 
      item.name,
      getRoomName(item.room),
      "", 
      item.item,
      cost
      )
    cechoLink(msg, function() centerview(item.room) end, "Click to center map on room.", true)
  end
end</script>
				<command></command>
				<packageName></packageName>
				<regex>^rents display zone (.+)$</regex>
			</Alias>
			<Alias isActive="yes" isFolder="no">
				<name>Rents help</name>
				<script>cecho(rents.help)</script>
				<command></command>
				<packageName></packageName>
				<regex>^rents help$</regex>
			</Alias>
			<AliasGroup isActive="yes" isFolder="yes">
				<name>Deleting rent storage information</name>
				<script></script>
				<command></command>
				<packageName></packageName>
				<regex></regex>
				<Alias isActive="yes" isFolder="no">
					<name>Rents delete</name>
					<script>--deletes the ENTIRE rents database

local rents_db = db:get_database("rents")
db:delete(rents_db.storage, true)
rents:echo("The entire rents database has been deleted.\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^rents delete$</regex>
				</Alias>
				<Alias isActive="yes" isFolder="no">
					<name>Rents delete name</name>
					<script>local name = matches[2]

local rents_db = db:get_database("rents")

db:delete(rents_db.storage, db:like(rents_db.storage.name, name))
rents:echo("All items for character \""..name.."\" have been removed from the rent database.\n")</script>
					<command></command>
					<packageName></packageName>
					<regex>^rents delete name (.+)$</regex>
				</Alias>
			</AliasGroup>
		</AliasGroup>
	</AliasPackage>
</MudletPackage>
